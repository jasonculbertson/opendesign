---
import { ViewTransitions } from 'astro:transitions';
import Sidebar from '../components/Sidebar.astro';
import { shouldShowSubstack } from '../utils/pageUtils';
import '../styles/main.css';

interface Props {
  title: string;
}

const { title } = Astro.props;
const path = Astro.url.pathname;
const showSubstack = shouldShowSubstack(path);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Open Design Docs" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div class="lg:hidden fixed top-0 left-0 right-0 h-16 bg-white border-b border-gray-200 z-50 flex items-center px-4">
      <div class="flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-gray-700" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
          <line x1="3" y1="9" x2="21" y2="9"></line>
          <line x1="9" y1="21" x2="9" y2="9"></line>
        </svg>
        <span class="text-[15px] font-medium text-gray-900 leading-none">Open Design Docs</span>
      </div>
      <button
        id="mobile-menu-button"
        class="ml-auto p-2 text-gray-700 -mr-2"
        aria-label="Toggle menu"
      >
        <div class="relative w-6 h-6">
          <!-- Close icon (X) -->
          <svg 
            xmlns="http://www.w3.org/2000/svg" 
            class="absolute inset-0 w-6 h-6 opacity-0 transform rotate-0 transition-all duration-300" 
            id="close-icon"
            viewBox="0 0 24 24" 
            fill="none" 
            stroke="currentColor" 
            stroke-width="2"
          >
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
          <!-- Menu icon (hamburger) -->
          <svg 
            xmlns="http://www.w3.org/2000/svg" 
            class="absolute inset-0 w-6 h-6 opacity-100 transform rotate-0 transition-all duration-300" 
            id="menu-icon"
            viewBox="0 0 24 24" 
            fill="none" 
            stroke="currentColor" 
            stroke-width="2"
          >
            <line x1="3" y1="12" x2="21" y2="12"></line>
            <line x1="3" y1="6" x2="21" y2="6"></line>
            <line x1="3" y1="18" x2="21" y2="18"></line>
          </svg>
        </div>
      </button>
    </div>

    <div class="flex min-h-screen">
      <Sidebar id="sidebar" currentPath={path} />
      
      <main class="flex-1 lg:pl-[250px]">
        <div class="pt-20 lg:pt-20">
          <div class="max-w-[900px] mx-auto px-4 lg:px-0">
            <div class="relative max-w-[680px]">
              <slot />
            </div>
            {showSubstack && (
              <div class="pb-12 max-w-[680px]">
                <div class="bg-white p-8 rounded-xl">
                  <iframe
                    src="https://opendesigndocs.substack.com/embed"
                    width="100%"
                    height="150"
                    style="border:2px solid #EFF4FA; background:#EFF4FA; border-radius:0.75rem;"
                    frameborder="0"
                    scrolling="no"
                  ></iframe>
                </div>
              </div>
            )}
          </div>
        </div>
      </main>
    </div>
    <ViewTransitions />

    <script is:inline>
      function setupMobileMenu() {
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const sidebar = document.getElementById('sidebar');
        const menuIcon = document.getElementById('menu-icon');
        const closeIcon = document.getElementById('close-icon');
        const body = document.body;

        function openMenu() {
          sidebar?.classList.remove('-translate-x-full');
          body.style.overflow = 'hidden';
          menuIcon?.classList.remove('opacity-100', 'rotate-0');
          menuIcon?.classList.add('opacity-0', 'rotate-180');
          closeIcon?.classList.remove('opacity-0', '-rotate-180');
          closeIcon?.classList.add('opacity-100', 'rotate-0');
        }

        function closeMenu() {
          sidebar?.classList.add('-translate-x-full');
          body.style.overflow = '';
          menuIcon?.classList.remove('opacity-0', 'rotate-180');
          menuIcon?.classList.add('opacity-100', 'rotate-0');
          closeIcon?.classList.remove('opacity-100', 'rotate-0');
          closeIcon?.classList.add('opacity-0', '-rotate-180');
        }

        mobileMenuButton?.addEventListener('click', (e) => {
          e.stopPropagation();
          if (sidebar?.classList.contains('-translate-x-full')) {
            openMenu();
          } else {
            closeMenu();
          }
        });

        // Close sidebar when clicking outside on mobile
        document.addEventListener('click', (e) => {
          if (window.innerWidth > 1024) return;
          
          const isClickInsideSidebar = sidebar?.contains(e.target);
          const isClickOnMenuButton = mobileMenuButton?.contains(e.target);
          
          if (!isClickInsideSidebar && !isClickOnMenuButton && !sidebar?.classList.contains('-translate-x-full')) {
            closeMenu();
          }
        });

        // Handle window resize
        window.addEventListener('resize', () => {
          if (window.innerWidth > 1024) {
            body.style.overflow = '';
          }
        });
      }

      // Setup on initial load
      setupMobileMenu();

      // Setup again after view transitions
      document.addEventListener('astro:page-load', () => {
        setupMobileMenu();
      });
    </script>
  </body>
</html>