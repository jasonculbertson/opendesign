---
import { 
  BookOpen,
  Clock, 
  Users,
  Calendar,
  Target,
  Rocket,
  LogOut,
  Palette,
  Box,
  UserPlus,
  Play,
  Video,
  ChevronRight,
  FileText,
  User,
  Film,
  Menu,
  Layers
} from 'lucide-react';

const links = [
  {
    header: 'Manager Docs',
    items: [
      { 
        name: 'Day 1', 
        href: '/docs/leadership/day-1',
        icon: Clock
      },
      {
        name: 'Week 1-2',
        href: '/docs/leadership/week-1-2',
        icon: Users
      },
      {
        name: 'Month 1',
        href: '/docs/leadership/month-1',
        icon: Calendar
      },
      {
        name: 'Quarter 1',
        href: '/docs/leadership/quarter-1',
        icon: Target
      },
      {
        name: 'Quarter 2',
        href: '/docs/leadership/quarter-2',
        icon: Rocket
      },
      {
        name: 'Departure',
        href: '/docs/leadership/departure',
        icon: LogOut
      }
    ]
  },
  {
    header: 'Team Docs',
    items: [
      {
        name: 'Design Team',
        href: '/docs/team/design',
        icon: Palette
      },
      {
        name: 'Product Team',
        href: '/docs/team/product',
        icon: Box
      },
      {
        name: 'Recruiting',
        href: '/docs/team/recruiting',
        icon: UserPlus
      }
    ]
  }
];

const { currentPath } = Astro.props;
---

<button
  id="mobile-menu-button"
  class="lg:hidden fixed top-4 left-4 z-30 p-2 bg-white rounded-lg shadow-md"
  aria-label="Toggle menu"
>
  <Menu className="w-6 h-6" />
</button>

<aside id="sidebar" class="fixed top-14 left-0 z-40 w-[220px] h-[calc(100vh-3.5rem)] transition-transform -translate-x-full lg:translate-x-0 bg-transparent flex flex-col">
  <nav class="flex-1 pl-8 pr-4 py-4 overflow-y-auto">
    <div class="space-y-4">
      {links.map((section, index) => (
        <div class={`space-y-1 ${index === 1 ? 'mt-8' : ''}`}>
          <h3 class="px-2 py-2 text-[15px] font-light" style="color: rgb(141,141,141)">
            {section.header}
          </h3>
          {section.items.map((link) => (
            <a
              href={link.href}
              class={`flex items-center px-2 py-2 text-[15px] rounded-lg transition-all ${
                link.href === currentPath 
                  ? 'bg-white shadow-[0_2px_4px_rgba(0,0,0,0.04)] text-indigo-600 font-medium ring-1 ring-black/[0.04]' 
                  : 'text-gray-600 hover:bg-white/40'
              }`}
            >
              <link.icon className={`w-5 h-5 mr-2.5 transition-colors ${
                link.href === currentPath 
                  ? 'text-indigo-600' 
                  : 'text-gray-500'
              }`} />
              <span>{link.name}</span>
            </a>
          ))}
        </div>
      ))}
    </div>
  </nav>

  <div class="sidebar-footer pl-10 pb-6 mt-auto border-t border-gray-200/50">
    <p class="text-xs text-gray-500 mt-4">
      Made with ❤️ by <a href="https://linkedin.com/in/jasonculbertson" target="_blank" class="text-indigo-600 hover:text-indigo-700">Jason Culbertson</a>
    </p>
  </div>
</aside>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const sidebar = document.getElementById('sidebar');
  const body = document.body;

  mobileMenuButton?.addEventListener('click', () => {
    sidebar?.classList.toggle('open');
    body.style.overflow = sidebar?.classList.contains('open') ? 'hidden' : '';
  });

  // Close sidebar when clicking outside on mobile
  document.addEventListener('click', (e) => {
    if (window.innerWidth > 1024) return;
    
    const isClickInsideSidebar = sidebar?.contains(e.target as Node);
    const isClickOnMenuButton = mobileMenuButton?.contains(e.target as Node);
    
    if (!isClickInsideSidebar && !isClickOnMenuButton && sidebar?.classList.contains('open')) {
      sidebar?.classList.remove('open');
      body.style.overflow = '';
    }
  });

  // Handle window resize
  window.addEventListener('resize', () => {
    if (window.innerWidth > 1024) {
      sidebar?.classList.remove('open');
      body.style.overflow = '';
    }
  });
</script>