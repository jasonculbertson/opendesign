---
import { 
  BookOpen,
  Clock, 
  Users,
  Calendar,
  Target,
  Rocket,
  LogOut,
  Palette,
  Box,
  UserPlus,
  Play,
  Video,
  ChevronRight,
  FileText,
  User,
  Film,
  Menu,
  Layers
} from 'lucide-react';

const { currentPath } = Astro.props;
console.log('Current Path in Sidebar:', currentPath);

const links = [
  {
    header: 'Manager Docs',
    items: [
      { 
        name: 'Day 1', 
        href: '/docs/leadership/day-1',
        icon: Clock
      },
      {
        name: 'Week 1-2',
        href: '/docs/leadership/week-1-2',
        icon: Users
      },
      {
        name: 'Month 1',
        href: '/docs/leadership/month-1',
        icon: Calendar
      },
      {
        name: 'Quarter 1',
        href: '/docs/leadership/quarter-1',
        icon: Target
      },
      {
        name: 'Quarter 2',
        href: '/docs/leadership/quarter-2',
        icon: Rocket
      },
      {
        name: 'Departure',
        href: '/docs/leadership/departure',
        icon: LogOut
      }
    ]
  },
  {
    header: 'Team Docs',
    items: [
      {
        name: 'Design Team',
        href: '/docs/team/design',
        icon: Palette
      },
      {
        name: 'Product Team',
        href: '/docs/team/product',
        icon: Box
      },
      {
        name: 'Recruiting',
        href: '/docs/team/recruiting',
        icon: UserPlus
      }
    ]
  }
];

---

<button
  class="lg:hidden fixed top-4 right-4 z-30 p-2 bg-white rounded-lg shadow-md"
  aria-label="Toggle menu"
>
  <Menu className="w-6 h-6" />
</button>

<aside id="sidebar" class="fixed inset-y-0 z-40 w-[280px] bg-white shadow-lg transition-transform duration-300 ease-in-out lg:w-[250px] lg:left-0 lg:bg-transparent lg:shadow-none">
  <nav class="h-full overflow-y-auto pt-20 pb-6 px-4">
    <div class="space-y-8">
      {links.map((section, index) => (
        <div class={`space-y-1 ${index === 1 ? 'mt-8' : ''}`}>
          <h3 class="text-[13px] font-medium text-[#6B7280] mb-3 uppercase tracking-wider">
            {section.header}
          </h3>
          <div class="space-y-1">
            {section.items.map((link) => {
              const isActive = currentPath?.startsWith(link.href);
              return (
                <a
                  href={link.href}
                  class={`flex items-center px-3 py-2 text-[15px] rounded-lg transition-all ${
                    isActive
                      ? 'bg-white/60 text-indigo-600 font-medium' 
                      : 'text-gray-700 hover:bg-gray-100'
                  }`}
                >
                  <link.icon className={`w-5 h-5 mr-3 transition-colors ${
                    isActive ? 'text-indigo-600' : 'text-gray-400'
                  }`} />
                  <span>{link.name}</span>
                </a>
              );
            })}
          </div>
        </div>
      ))}
    </div>
  </nav>

  <div class="absolute bottom-0 left-0 right-0 p-4">
    <div class="bg-white/40 rounded-lg px-3 py-1.5 text-center text-[11px] text-gray-500 shadow-[0_2px_4px_rgba(0,0,0,0.02)] ring-1 ring-black/[0.02]">
      Made with ❤️ by <a href="https://linkedin.com/in/jasonculbertson" target="_blank" class="text-indigo-600 hover:text-indigo-700">Jason Culbertson</a>
    </div>
  </div>
</aside>

<script>
  const sidebar = document.getElementById('sidebar');
  const body = document.body;

  // Close sidebar when clicking outside on mobile
  document.addEventListener('click', (e) => {
    if (window.innerWidth > 1024) return;
    
    const isClickInsideSidebar = sidebar?.contains(e.target as Node);
    
    if (!isClickInsideSidebar && sidebar?.classList.contains('open')) {
      sidebar?.classList.remove('open');
      body.style.overflow = '';
    }
  });

  // Handle window resize
  window.addEventListener('resize', () => {
    if (window.innerWidth > 1024) {
      sidebar?.classList.remove('open');
      body.style.overflow = '';
    }
  });
</script>