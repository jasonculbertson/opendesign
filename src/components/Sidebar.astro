---
import { 
  BookOpen,
  Clock, 
  Users,
  Calendar,
  Target,
  Rocket,
  LogOut,
  Palette,
  Box,
  UserPlus,
  Play,
  Video,
  ChevronRight,
  FileText,
  User,
  Film,
  Menu,
  Layers,
  ImagePlus,
  Mic,
  FileVideo
} from 'lucide-react';

interface Props {
  currentPath?: string;
}

const { currentPath = '/' } = Astro.props;

const links = [
  {
    header: 'Manager Docs',
    items: [
      { 
        name: 'Day 1', 
        href: '/docs/leadership/day-1',
        icon: Clock
      },
      {
        name: 'Week 1-2',
        href: '/docs/leadership/week-1-2',
        icon: Users
      },
      {
        name: 'Month 1',
        href: '/docs/leadership/month-1',
        icon: Calendar
      },
      {
        name: 'Quarter 1',
        href: '/docs/leadership/quarter-1',
        icon: Target
      },
      {
        name: 'Quarter 2',
        href: '/docs/leadership/quarter-2',
        icon: Rocket
      },
      {
        name: 'Departure',
        href: '/docs/leadership/departure',
        icon: LogOut
      }
    ]
  },
  {
    header: 'Team Docs',
    items: [
      {
        name: 'Design Team',
        href: '/docs/team/design',
        icon: Palette
      },
      {
        name: 'Product Team',
        href: '/docs/team/product',
        icon: Box
      },
      {
        name: 'Recruiting',
        href: '/docs/team/recruiting',
        icon: UserPlus
      }
    ]
  },
  {
    header: 'Videos',
    items: [
      {
        name: 'Case Studies',
        href: '/docs/videos/case-studies',
        icon: Video
      },
      {
        name: 'Interviews',
        href: '/docs/videos/interviews',
        icon: Film
      }
    ]
  }
];
---

<aside 
  id="sidebar"
  class="fixed top-0 left-0 bottom-0 z-50 sm:w-[350px] lg:w-[250px] bg-[#f9f9f9] backdrop-blur-md shadow-xl lg:shadow-none lg:border-r border-[#e5e5e5] overflow-y-auto transform -translate-x-full lg:translate-x-0 transition-transform duration-300 ease-in-out"
>
  <nav class="p-4 h-full flex flex-col">
    <div class="hidden lg:flex items-center gap-2 mb-8">
      <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-gray-700" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
        <line x1="3" y1="9" x2="21" y2="9"></line>
        <line x1="9" y1="21" x2="9" y2="9"></line>
      </svg>
      <span class="text-[15px] font-medium text-gray-900 leading-none">Open Design Docs</span>
    </div>

    <div class="flex-1">
      {links.map(section => (
        <div class="mb-8">
          <h2 class="text-xs font-semibold text-gray-400 uppercase tracking-wider mb-3 px-3">
            {section.header}
          </h2>
          <ul class="space-y-[2px]">
            {section.items.map(item => {
              const isActive = currentPath?.startsWith(item.href) ?? false;
              return (
                <li>
                  <a
                    href={item.href}
                    class={`flex items-center gap-2 px-3 py-2 text-[14px] rounded-lg transition-colors duration-150
                      ${isActive 
                        ? 'bg-indigo-50 text-indigo-600 font-medium' 
                        : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'
                      }`}
                  >
                    <item.icon className="w-[18px] h-[18px] flex-shrink-0" />
                    <span>{item.name}</span>
                    {isActive && (
                      <ChevronRight className="w-4 h-4 ml-auto text-indigo-600" />
                    )}
                  </a>
                </li>
              );
            })}
          </ul>
        </div>
      ))}
    </div>

    <div class="mb-0 lg:mb-0 lg:fixed lg:bottom-0 lg:left-0 lg:w-[250px] p-4">
      <a href="https://linkedin.com/in/jasonculbertson" target="_blank" class="block mx-auto lg:w-fit px-4 py-2 text-[11px] text-gray-500 rounded-lg bg-gradient-to-r from-white to-gray-50 hover:to-gray-100 border border-gray-200/50 shadow-[0_1px_3px_rgba(0,0,0,0.05)] transition-all hover:shadow-[0_2px_4px_rgba(0,0,0,0.08)]">
        Made with ❤️ by Jason Culbertson
      </a>
    </div>
  </nav>
</aside>

<button
  id="mobile-menu-button"
  class="lg:hidden fixed top-4 left-4 z-[60] p-2 bg-white rounded-lg shadow-md"
  aria-label="Toggle menu"
>
  <Menu className="w-6 h-6" />
</button>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const sidebar = document.getElementById('sidebar');
  const body = document.body;

  mobileMenuButton?.addEventListener('click', () => {
    sidebar?.classList.toggle('-translate-x-full');
    body.style.overflow = sidebar?.classList.contains('-translate-x-full') ? '' : 'hidden';
  });

  // Close sidebar when clicking outside on mobile
  document.addEventListener('click', (e) => {
    if (window.innerWidth > 1024) return;
    
    const isClickInsideSidebar = sidebar?.contains(e.target as Node);
    const isClickOnMenuButton = mobileMenuButton?.contains(e.target as Node);
    
    if (!isClickInsideSidebar && !isClickOnMenuButton && !sidebar?.classList.contains('-translate-x-full')) {
      sidebar?.classList.add('-translate-x-full');
      body.style.overflow = '';
    }
  });

  // Handle window resize
  window.addEventListener('resize', () => {
    if (window.innerWidth > 1024) {
      sidebar?.classList.add('-translate-x-full');
      body.style.overflow = '';
    }
  });
</script>